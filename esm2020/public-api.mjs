/*
 * Public API Surface of ngx-chat
 */
export { jid as parseJid } from '@xmpp/client';
export { JID } from '@xmpp/jid';
export * from './lib/components/chat-filedrop/file-drop.component';
export * from './lib/components/chat-message-input/chat-message-input.component';
export * from './lib/components/chat-message-list/chat-message-list.component';
export * from './lib/components/chat-message-simple/chat-message-simple.component';
export * from './lib/components/chat-message/chat-message.component';
export * from './lib/components/chat-window/chat-window.component';
export * from './lib/components/chat.component';
export * from './lib/core/contact';
export * from './lib/core/contact-avatar';
export * from './lib/core/form';
export * from './lib/core/get-domain';
export * from './lib/core/id-generator';
export * from './lib/core/log-in-request';
export * from './lib/core/message';
export * from './lib/core/message-store';
export * from './lib/core/plugin';
export * from './lib/core/presence';
export * from './lib/core/recipient';
export * from './lib/core/stanza';
export * from './lib/core/subscription';
export * from './lib/core/translations';
export * from './lib/directives/links.directive';
export * from './lib/hooks/chat-contact-click-handler';
export * from './lib/hooks/file-upload-handler';
export * from './lib/ngx-chat.module';
export * from './lib/services/adapters/xmpp/abstract-stanza-builder';
export * from './lib/services/adapters/xmpp/plugins/abstract-xmpp-plugin';
export * from './lib/services/adapters/xmpp/plugins/block.plugin';
export * from './lib/services/adapters/xmpp/plugins/bookmark.plugin';
export * from './lib/services/adapters/xmpp/plugins/http-file-upload.plugin';
export * from './lib/services/adapters/xmpp/plugins/message-archive.plugin';
export * from './lib/services/adapters/xmpp/plugins/message-carbons.plugin';
export * from './lib/services/adapters/xmpp/plugins/message-state.plugin';
export * from './lib/services/adapters/xmpp/plugins/message-uuid.plugin';
export * from './lib/services/adapters/xmpp/plugins/message.plugin';
export * from './lib/services/adapters/xmpp/plugins/muc-sub.plugin';
export * from './lib/services/adapters/xmpp/plugins/multi-user-chat/multi-user-chat.plugin';
export * from './lib/services/adapters/xmpp/plugins/ping.plugin';
export * from './lib/services/adapters/xmpp/plugins/publish-subscribe.plugin';
export * from './lib/services/adapters/xmpp/plugins/push.plugin';
export * from './lib/services/adapters/xmpp/plugins/registration.plugin';
export * from './lib/services/adapters/xmpp/plugins/roster.plugin';
export * from './lib/services/adapters/xmpp/plugins/service-discovery.plugin';
export * from './lib/services/adapters/xmpp/plugins/unread-message-count.plugin';
export * from './lib/services/adapters/xmpp/xmpp-chat-adapter.service';
export * from './lib/services/adapters/xmpp/xmpp-chat-connection.service';
export * from './lib/services/adapters/xmpp/xmpp-client-factory.service';
export * from './lib/services/adapters/xmpp/xmpp-response.error';
export * from './lib/services/chat-background-notification.service';
export * from './lib/services/chat-list-state.service';
export * from './lib/services/chat-message-list-registry.service';
export * from './lib/services/chat-style';
export * from './lib/services/chat-service';
export * from './lib/services/contact-factory.service';
export * from './lib/services/log.service';
export * from './lib/services/report-user-service';
export { LINK_OPENER_TOKEN } from './lib/components/chat-message-link/chat-message-link.component';
export { selectFile } from './lib/core/utils-file';
export { Room } from './lib/services/adapters/xmpp/plugins/multi-user-chat/room';
export { Affiliation } from './lib/services/adapters/xmpp/plugins/multi-user-chat/affiliation';
export { Role } from './lib/services/adapters/xmpp/plugins/multi-user-chat/role';
//# sourceMappingURL=data:application/json;base64,