import { Component, Inject, Input, Optional, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { filter, takeUntil } from 'rxjs/operators';
import { Direction } from '../../core/message';
import { CONTACT_CLICK_HANDLER_TOKEN } from '../../hooks/chat-contact-click-handler';
import { CHAT_SERVICE_TOKEN } from '../../services/chat-service';
import { ChatMessageInputComponent } from '../chat-message-input/chat-message-input.component';
import { ChatMessageListComponent } from '../chat-message-list/chat-message-list.component';
import { FILE_UPLOAD_HANDLER_TOKEN } from '../../hooks/file-upload-handler';
import * as i0 from "@angular/core";
import * as i1 from "../../services/chat-list-state.service";
import * as i2 from "@angular/common";
import * as i3 from "../chat-message-input/chat-message-input.component";
import * as i4 from "../chat-message-list/chat-message-list.component";
import * as i5 from "../chat-filedrop/file-drop.component";
import * as i6 from "../chat-window-frame/chat-window-frame.component";
import * as i7 from "../chat-avatar/chat-avatar.component";
export class ChatWindowComponent {
    constructor(chatService, chatListService, fileUploadHandler, contactClickHandler) {
        this.chatService = chatService;
        this.chatListService = chatListService;
        this.fileUploadHandler = fileUploadHandler;
        this.contactClickHandler = contactClickHandler;
        this.ngDestroy = new Subject();
    }
    ngOnInit() {
        const messages$ = this.chatWindowState.recipient.messages$;
        messages$
            .pipe(filter(message => message.direction === Direction.in), takeUntil(this.ngDestroy))
            .subscribe(() => {
            this.chatWindowState.isCollapsed = false;
        });
    }
    ngOnDestroy() {
        this.ngDestroy.next();
        this.ngDestroy.complete();
    }
    onClickHeader() {
        this.chatWindowState.isCollapsed = !this.chatWindowState.isCollapsed;
    }
    onClickClose() {
        this.chatListService.closeChat(this.chatWindowState.recipient);
    }
    sendMessage() {
        this.messageInput.onSendMessage();
    }
    afterSendMessage() {
        this.contactMessageList.scheduleScrollToLastMessage();
    }
    async uploadFile(file) {
        const url = await this.fileUploadHandler.upload(file);
        this.chatService.sendMessage(this.chatWindowState.recipient, url);
    }
    onFocus() {
        this.messageInput.focus();
    }
    onActionClick(chatAction) {
        chatAction.onClick({
            contact: this.chatWindowState.recipient.jidBare.toString(),
            chatWindow: this,
        });
    }
    onContactClick($event) {
        if (this.contactClickHandler && !this.chatWindowState.isCollapsed) {
            $event.stopPropagation();
            this.contactClickHandler.onClick(this.chatWindowState.recipient);
        }
    }
}
ChatWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.7", ngImport: i0, type: ChatWindowComponent, deps: [{ token: CHAT_SERVICE_TOKEN }, { token: i1.ChatListStateService }, { token: FILE_UPLOAD_HANDLER_TOKEN }, { token: CONTACT_CLICK_HANDLER_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Component });
ChatWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.7", type: ChatWindowComponent, selector: "ngx-chat-window", inputs: { chatWindowState: "chatWindowState" }, viewQueries: [{ propertyName: "messageInput", first: true, predicate: ChatMessageInputComponent, descendants: true }, { propertyName: "contactMessageList", first: true, predicate: ChatMessageListComponent, descendants: true }], ngImport: i0, template: "<ngx-chat-window-frame\n        (headerClick)=\"onClickHeader()\"\n        (closeClick)=\"onClickClose()\">\n\n    <ng-container class=\"window-header-content\">\n        <div class=\"chat-contact-avatar-wrapper\"\n             (click)=\"onContactClick($event)\"\n        >\n            <ngx-chat-avatar [imageUrl]=\"chatWindowState.recipient.avatar\"></ngx-chat-avatar>\n        </div>\n\n        <div class=\"header-middle\">\n\n            <div class=\"chat-contact-name-wrapper\"\n                 [title]=\"chatWindowState.recipient.name\"\n            >\n                <span [ngClass]=\"{'has-click-handler': !chatWindowState.isCollapsed && !!this.contactClickHandler}\"\n                      (click)=\"onContactClick($event)\">\n                    {{chatWindowState.recipient.name}}\n                </span>\n            </div>\n\n            <div class=\"chat-contact-status-wrapper\"\n                 *ngIf=\"!chatWindowState.isCollapsed && chatWindowState.recipient.recipientType === 'contact'\"\n            >\n                <span class=\"chat-contact-status\">\n                    {{chatService.translations.presence[chatWindowState.recipient.presence$ | async]}}\n                </span>\n            </div>\n\n        </div>\n    </ng-container>\n\n    <ngx-chat-filedrop\n            *ngIf=\"!chatWindowState.isCollapsed\"\n            class=\"window-content\"\n            [enabled]=\"fileUploadHandler.isUploadSupported()\"\n            (fileUpload)=\"uploadFile($event)\"\n            [dropMessage]=\"chatService.translations.dropMessage\">\n        <div (click)=\"onFocus()\">\n            <ngx-chat-message-list\n                    [recipient]=\"chatWindowState.recipient\"\n                    [showAvatars]=\"false\"></ngx-chat-message-list>\n            <div class=\"chat-input-container\">\n                <ngx-chat-message-input\n                        [recipient]=\"chatWindowState.recipient\"\n                        (messageSent)=\"afterSendMessage()\"\n                ></ngx-chat-message-input>\n                <div *ngFor=\"let action of chatService.chatActions\"\n                     (click)=\"onActionClick(action)\"\n                     class=\"chat-action\"\n                     [ngClass]=\"action.cssClass\"\n                     [innerHTML]=\"action.html\">\n                </div>\n            </div>\n        </div>\n    </ngx-chat-filedrop>\n\n</ngx-chat-window-frame>\n", styles: ["@keyframes ngx-chat-message-in{0%{transform:translate(50px);opacity:0}to{transform:none;opacity:1}}@keyframes ngx-chat-message-out{0%{transform:translate(-50px);opacity:0}to{transform:none;opacity:1}}*{box-sizing:border-box;margin:0;padding:0;font-family:Helvetica,Arial,serif}.chat-contact-avatar-wrapper{min-width:2em;width:2em;min-height:2em;height:2em}.header-middle{flex-grow:1;flex-shrink:1;padding:0 .5em;white-space:nowrap;overflow:hidden;font-size:.8em;line-height:1.2;height:100%;display:flex;flex-direction:column;justify-content:space-around}.chat-contact-name-wrapper,.chat-contact-status-wrapper{text-overflow:ellipsis;overflow:hidden;display:block}.has-click-handler:hover{text-decoration:underline}.chat-contact-status{color:#999}.window-content{text-align:left;padding:0;min-height:5em;display:flex;flex-direction:column;overflow-x:hidden;overflow-y:auto}.chat-input-container{display:flex;padding:.5em;border-top:1px solid #e1e1e1;background:#fff;cursor:text}.chat-action{cursor:pointer;align-self:center;text-align:center}.chat-window-send{background-color:#fff;border-color:#fff;color:#000;width:1.5em}.chat-window-send:active{border:none}ngx-chat-message-input{flex-grow:1}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.ChatMessageInputComponent, selector: "ngx-chat-message-input", inputs: ["recipient"], outputs: ["messageSent"] }, { kind: "component", type: i4.ChatMessageListComponent, selector: "ngx-chat-message-list", inputs: ["recipient", "showAvatars"] }, { kind: "component", type: i5.FileDropComponent, selector: "ngx-chat-filedrop", inputs: ["dropMessage", "enabled"], outputs: ["fileUpload"] }, { kind: "component", type: i6.ChatWindowFrameComponent, selector: "ngx-chat-window-frame", outputs: ["closeClick", "headerClick"] }, { kind: "component", type: i7.ChatAvatarComponent, selector: "ngx-chat-avatar", inputs: ["imageUrl"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.7", ngImport: i0, type: ChatWindowComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-chat-window', template: "<ngx-chat-window-frame\n        (headerClick)=\"onClickHeader()\"\n        (closeClick)=\"onClickClose()\">\n\n    <ng-container class=\"window-header-content\">\n        <div class=\"chat-contact-avatar-wrapper\"\n             (click)=\"onContactClick($event)\"\n        >\n            <ngx-chat-avatar [imageUrl]=\"chatWindowState.recipient.avatar\"></ngx-chat-avatar>\n        </div>\n\n        <div class=\"header-middle\">\n\n            <div class=\"chat-contact-name-wrapper\"\n                 [title]=\"chatWindowState.recipient.name\"\n            >\n                <span [ngClass]=\"{'has-click-handler': !chatWindowState.isCollapsed && !!this.contactClickHandler}\"\n                      (click)=\"onContactClick($event)\">\n                    {{chatWindowState.recipient.name}}\n                </span>\n            </div>\n\n            <div class=\"chat-contact-status-wrapper\"\n                 *ngIf=\"!chatWindowState.isCollapsed && chatWindowState.recipient.recipientType === 'contact'\"\n            >\n                <span class=\"chat-contact-status\">\n                    {{chatService.translations.presence[chatWindowState.recipient.presence$ | async]}}\n                </span>\n            </div>\n\n        </div>\n    </ng-container>\n\n    <ngx-chat-filedrop\n            *ngIf=\"!chatWindowState.isCollapsed\"\n            class=\"window-content\"\n            [enabled]=\"fileUploadHandler.isUploadSupported()\"\n            (fileUpload)=\"uploadFile($event)\"\n            [dropMessage]=\"chatService.translations.dropMessage\">\n        <div (click)=\"onFocus()\">\n            <ngx-chat-message-list\n                    [recipient]=\"chatWindowState.recipient\"\n                    [showAvatars]=\"false\"></ngx-chat-message-list>\n            <div class=\"chat-input-container\">\n                <ngx-chat-message-input\n                        [recipient]=\"chatWindowState.recipient\"\n                        (messageSent)=\"afterSendMessage()\"\n                ></ngx-chat-message-input>\n                <div *ngFor=\"let action of chatService.chatActions\"\n                     (click)=\"onActionClick(action)\"\n                     class=\"chat-action\"\n                     [ngClass]=\"action.cssClass\"\n                     [innerHTML]=\"action.html\">\n                </div>\n            </div>\n        </div>\n    </ngx-chat-filedrop>\n\n</ngx-chat-window-frame>\n", styles: ["@keyframes ngx-chat-message-in{0%{transform:translate(50px);opacity:0}to{transform:none;opacity:1}}@keyframes ngx-chat-message-out{0%{transform:translate(-50px);opacity:0}to{transform:none;opacity:1}}*{box-sizing:border-box;margin:0;padding:0;font-family:Helvetica,Arial,serif}.chat-contact-avatar-wrapper{min-width:2em;width:2em;min-height:2em;height:2em}.header-middle{flex-grow:1;flex-shrink:1;padding:0 .5em;white-space:nowrap;overflow:hidden;font-size:.8em;line-height:1.2;height:100%;display:flex;flex-direction:column;justify-content:space-around}.chat-contact-name-wrapper,.chat-contact-status-wrapper{text-overflow:ellipsis;overflow:hidden;display:block}.has-click-handler:hover{text-decoration:underline}.chat-contact-status{color:#999}.window-content{text-align:left;padding:0;min-height:5em;display:flex;flex-direction:column;overflow-x:hidden;overflow-y:auto}.chat-input-container{display:flex;padding:.5em;border-top:1px solid #e1e1e1;background:#fff;cursor:text}.chat-action{cursor:pointer;align-self:center;text-align:center}.chat-window-send{background-color:#fff;border-color:#fff;color:#000;width:1.5em}.chat-window-send:active{border:none}ngx-chat-message-input{flex-grow:1}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [CHAT_SERVICE_TOKEN]
                }] }, { type: i1.ChatListStateService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [FILE_UPLOAD_HANDLER_TOKEN]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [CONTACT_CLICK_HANDLER_TOKEN]
                }, {
                    type: Optional
                }] }]; }, propDecorators: { chatWindowState: [{
                type: Input
            }], messageInput: [{
                type: ViewChild,
                args: [ChatMessageInputComponent]
            }], contactMessageList: [{
                type: ViewChild,
                args: [ChatMessageListComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,